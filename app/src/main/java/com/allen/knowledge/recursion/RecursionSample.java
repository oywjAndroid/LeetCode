package com.allen.knowledge.recursion;

/**
 * 递归思想的锻炼
 * <p>
 * 1.计算阶乘：编写一个函数来计算给定数字的阶乘。阶乘可以递归地定义为n! = n * (n-1)!
 * 2.斐波那契数列：实现斐波那契数列的函数，其中第n个数字是前两个数字之和：fib(n) = fib(n-1) + fib(n-2)，其中fib(0) = 0，fib(1) = 1。
 * 3.求和：编写一个函数，计算一个数组中所有元素的和，可以使用递归来实现。
 * 4.计算幂：实现一个函数，计算x的n次幂，可以使用递归来实现。例如，power(x, n) = x * power(x, n-1)。
 * 5.求最大值：实现一个函数，找出一个数组中的最大值，可以使用递归来比较数组元素。
 * 6.字符串反转：编写一个函数，反转给定字符串，可以使用递归来交换字符串的首尾字符。
 * 7.汉诺塔问题：实现汉诺塔问题的解法，将一个塔上的圆盘移动到另一个塔上，每次只能移动一个圆盘，并且大圆盘不能放在小圆盘上面。
 * 8.斐波那契数列求和：实现一个函数，计算斐波那契数列的前n项的和，可以使用递归来计算每一项的斐波那契数。
 * 9.二叉树遍历：实现二叉树的前序、中序和后序遍历，可以使用递归来遍历树的每个节点。
 * 10.字符串长度：编写一个函数，计算给定字符串的长度，可以使用递归来逐个字符地遍历字符串。
 */
public class RecursionSample {
}
